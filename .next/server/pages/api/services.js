"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/services";
exports.ids = ["pages/api/services"];
exports.modules = {

/***/ "../../../api-utils/node":
/*!*****************************************************!*\
  !*** external "next/dist/server/api-utils/node.js" ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = require("next/dist/server/api-utils/node.js");

/***/ }),

/***/ "../route-module":
/*!************************************************************************!*\
  !*** external "next/dist/server/future/route-modules/route-module.js" ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/server/future/route-modules/route-module.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"hoist\", ({\n    enumerable: true,\n    get: function() {\n        return hoist;\n    }\n}));\nfunction hoist(module, name) {\n    // If the name is available in the module, return it.\n    if (name in module) {\n        return module[name];\n    }\n    // If a property called `then` exists, assume it's a promise and\n    // return a promise that resolves to the name.\n    if (\"then\" in module && typeof module.then === \"function\") {\n        return module.then((mod)=>hoist(mod, name));\n    }\n    // If we're trying to hoise the default export, and the module is a function,\n    // return the module itself.\n    if (typeof module === \"function\" && name === \"default\") {\n        return module;\n    }\n    // Otherwise, return undefined.\n    return undefined;\n}\n\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQWlCO0FBQ2pCLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLHlDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dvcmtzcGFjZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2hlbHBlcnMuanM/NjRjZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhvaXN0cyBhIG5hbWUgZnJvbSBhIG1vZHVsZSBvciBwcm9taXNlZCBtb2R1bGUuXG4gKlxuICogQHBhcmFtIG1vZHVsZSB0aGUgbW9kdWxlIHRvIGhvaXN0IHRoZSBuYW1lIGZyb21cbiAqIEBwYXJhbSBuYW1lIHRoZSBuYW1lIHRvIGhvaXN0XG4gKiBAcmV0dXJucyB0aGUgdmFsdWUgb24gdGhlIG1vZHVsZSAob3IgcHJvbWlzZWQgbW9kdWxlKVxuICovIFwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaG9pc3RcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGhvaXN0O1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gaG9pc3QobW9kdWxlLCBuYW1lKSB7XG4gICAgLy8gSWYgdGhlIG5hbWUgaXMgYXZhaWxhYmxlIGluIHRoZSBtb2R1bGUsIHJldHVybiBpdC5cbiAgICBpZiAobmFtZSBpbiBtb2R1bGUpIHtcbiAgICAgICAgcmV0dXJuIG1vZHVsZVtuYW1lXTtcbiAgICB9XG4gICAgLy8gSWYgYSBwcm9wZXJ0eSBjYWxsZWQgYHRoZW5gIGV4aXN0cywgYXNzdW1lIGl0J3MgYSBwcm9taXNlIGFuZFxuICAgIC8vIHJldHVybiBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgbmFtZS5cbiAgICBpZiAoXCJ0aGVuXCIgaW4gbW9kdWxlICYmIHR5cGVvZiBtb2R1bGUudGhlbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBtb2R1bGUudGhlbigobW9kKT0+aG9pc3QobW9kLCBuYW1lKSk7XG4gICAgfVxuICAgIC8vIElmIHdlJ3JlIHRyeWluZyB0byBob2lzZSB0aGUgZGVmYXVsdCBleHBvcnQsIGFuZCB0aGUgbW9kdWxlIGlzIGEgZnVuY3Rpb24sXG4gICAgLy8gcmV0dXJuIHRoZSBtb2R1bGUgaXRzZWxmLlxuICAgIGlmICh0eXBlb2YgbW9kdWxlID09PSBcImZ1bmN0aW9uXCIgJiYgbmFtZSA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgcmV0dXJuIG1vZHVsZTtcbiAgICB9XG4gICAgLy8gT3RoZXJ3aXNlLCByZXR1cm4gdW5kZWZpbmVkLlxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js\n");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fservices&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fservices%2Findex.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fservices&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fservices%2Findex.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-route-loader/helpers */ \"(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js\");\n/* harmony import */ var _pages_api_services_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/services/index.js */ \"(api)/./pages/api/services/index.js\");\n// @ts-ignore this need to be imported from next/dist to be external\n\n\n\nconst PagesAPIRouteModule = next_dist_server_future_route_modules_pages_api_module__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule;\n// Import the userland code.\n// @ts-expect-error - replaced by webpack/turbopack loader\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_services_index_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_services_index_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/services\",\n        pathname: \"/api/services\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_services_index_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnNlcnZpY2VzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZzZXJ2aWNlcyUyRmluZGV4LmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ2lGO0FBQ2xCO0FBQ21CO0FBQ2xGLDRCQUE0Qix1R0FBMEI7QUFDdEQ7QUFDQTtBQUMwRDtBQUMxRDtBQUNBLGlFQUFlLGdHQUFLLENBQUMseURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSxnR0FBSyxDQUFDLHlEQUFRO0FBQ3BDO0FBQ087QUFDUDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL3dvcmtzcGFjZS8/YTZhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtaWdub3JlIHRoaXMgbmVlZCB0byBiZSBpbXBvcnRlZCBmcm9tIG5leHQvZGlzdCB0byBiZSBleHRlcm5hbFxuaW1wb3J0ICogYXMgbW9kdWxlIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGVcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2hlbHBlcnNcIjtcbmNvbnN0IFBhZ2VzQVBJUm91dGVNb2R1bGUgPSBtb2R1bGUuUGFnZXNBUElSb3V0ZU1vZHVsZTtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbi8vIEB0cy1leHBlY3QtZXJyb3IgLSByZXBsYWNlZCBieSB3ZWJwYWNrL3R1cmJvcGFjayBsb2FkZXJcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9zZXJ2aWNlcy9pbmRleC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3NlcnZpY2VzXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvc2VydmljZXNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fservices&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fservices%2Findex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/services/index.js":
/*!*************************************!*\
  !*** ./pages/api/services/index.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// API Services Directory - Lists all available API services\nconst apiServices = [\n    {\n        id: \"random-user\",\n        name: \"Random User Generator API\",\n        description: \"Generate random user profiles for testing and development. Get realistic user data including names, addresses, emails, and profile pictures.\",\n        longDescription: \"This API provides random user data that can be used for testing applications, populating databases with sample data, or creating demo accounts. Each generated user includes a complete profile with personal information, contact details, and even avatar URLs. The data is randomly generated but maintains realistic patterns and relationships.\",\n        endpoints: [\n            {\n                path: \"/api/services/random-user\",\n                method: \"GET\",\n                description: \"Get random user data\"\n            },\n            {\n                path: \"/api/services/random-user?count=10\",\n                method: \"GET\",\n                description: \"Get multiple random users\"\n            },\n            {\n                path: \"/api/services/random-user?gender=female\",\n                method: \"GET\",\n                description: \"Filter by gender (male/female)\"\n            },\n            {\n                path: \"/api/services/random-user?minAge=30&maxAge=50\",\n                method: \"GET\",\n                description: \"Filter by age range\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"count\",\n                type: \"integer\",\n                description: \"Number of users to generate (1-100)\",\n                required: false,\n                default: \"1\"\n            },\n            {\n                name: \"gender\",\n                type: \"string\",\n                description: \"Filter by gender (male or female)\",\n                required: false\n            },\n            {\n                name: \"minAge\",\n                type: \"integer\",\n                description: \"Minimum age of generated users\",\n                required: false\n            },\n            {\n                name: \"maxAge\",\n                type: \"integer\",\n                description: \"Maximum age of generated users\",\n                required: false\n            }\n        ],\n        example: {\n            request: \"/api/services/random-user?count=1\",\n            response: {\n                \"info\": {\n                    \"count\": 1,\n                    \"parameters\": {\n                        \"count\": 1\n                    },\n                    \"version\": \"1.0\"\n                },\n                \"results\": [\n                    {\n                        \"id\": 1234,\n                        \"firstName\": \"John\",\n                        \"lastName\": \"Doe\",\n                        \"name\": \"John Doe\",\n                        \"email\": \"john.doe@example.com\",\n                        \"gender\": \"male\",\n                        \"age\": 35,\n                        \"phone\": \"(555) 123-4567\",\n                        \"address\": {\n                            \"street\": \"123 Main St\",\n                            \"city\": \"New York\",\n                            \"state\": \"New York\",\n                            \"stateCode\": \"NY\",\n                            \"zipCode\": 10001,\n                            \"country\": \"United States\",\n                            \"countryCode\": \"US\"\n                        },\n                        \"avatar\": \"https://i.pravatar.cc/300?img=1\",\n                        \"username\": \"john123\",\n                        \"registeredDate\": \"2023-01-01T00:00:00.000Z\"\n                    }\n                ]\n            }\n        },\n        category: \"development\",\n        icon: \"\\uD83D\\uDC64\"\n    },\n    {\n        id: \"weather\",\n        name: \"Weather API\",\n        description: \"Get current weather data and forecasts for locations worldwide. Realistic weather data simulation based on global locations with temperature, conditions, and other meteorological information.\",\n        longDescription: \"This API provides simulated weather data for cities around the world. It generates realistic current weather conditions based on location and time of year, as well as multi-day forecasts. This is perfect for developing weather apps, testing location-based services, or adding weather data to travel applications without needing API keys.\",\n        endpoints: [\n            {\n                path: \"/api/services/weather\",\n                method: \"GET\",\n                description: \"Get weather for a random city\"\n            },\n            {\n                path: \"/api/services/weather?city=London\",\n                method: \"GET\",\n                description: \"Get weather for a specific city\"\n            },\n            {\n                path: \"/api/services/weather?lat=40.7128&lon=-74.0060\",\n                method: \"GET\",\n                description: \"Get weather by coordinates\"\n            },\n            {\n                path: \"/api/services/weather?forecast=true\",\n                method: \"GET\",\n                description: \"Get weather forecast\"\n            },\n            {\n                path: \"/api/services/weather?forecast=true&days=7\",\n                method: \"GET\",\n                description: \"Get weather forecast for specific days\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"city\",\n                type: \"string\",\n                description: \"City name to get weather for\",\n                required: false\n            },\n            {\n                name: \"lat\",\n                type: \"number\",\n                description: \"Latitude coordinate\",\n                required: false\n            },\n            {\n                name: \"lon\",\n                type: \"number\",\n                description: \"Longitude coordinate\",\n                required: false\n            },\n            {\n                name: \"forecast\",\n                type: \"boolean\",\n                description: \"Get forecast data instead of current weather\",\n                required: false,\n                default: \"false\"\n            },\n            {\n                name: \"days\",\n                type: \"integer\",\n                description: \"Number of days for forecast (1-14)\",\n                required: false,\n                default: \"5\"\n            }\n        ],\n        example: {\n            request: \"/api/services/weather?city=London\",\n            response: {\n                \"coord\": {\n                    \"lon\": -0.1278,\n                    \"lat\": 51.5074\n                },\n                \"weather\": [\n                    {\n                        \"id\": 501,\n                        \"main\": \"Rain\",\n                        \"description\": \"moderate rain\",\n                        \"icon\": \"10d\"\n                    }\n                ],\n                \"base\": \"stations\",\n                \"main\": {\n                    \"temp\": 12.75,\n                    \"feels_like\": 12.13,\n                    \"temp_min\": 11.76,\n                    \"temp_max\": 13.16,\n                    \"pressure\": 1012,\n                    \"humidity\": 88\n                },\n                \"visibility\": 10000,\n                \"wind\": {\n                    \"speed\": 4.63,\n                    \"deg\": 220\n                },\n                \"clouds\": {\n                    \"all\": 90\n                },\n                \"dt\": 1629283802,\n                \"sys\": {\n                    \"type\": 2,\n                    \"id\": 2019646,\n                    \"country\": \"GB\",\n                    \"sunrise\": 1629259384,\n                    \"sunset\": 1629312072\n                },\n                \"timezone\": 3600,\n                \"id\": 2643743,\n                \"name\": \"London\",\n                \"cod\": 200\n            }\n        },\n        category: \"weather\",\n        icon: \"\\uD83C\\uDF24️\"\n    },\n    {\n        id: \"crypto\",\n        name: \"Cryptocurrency API\",\n        description: \"Access cryptocurrency market data including prices, market cap, volume, and historical data. Real-time price simulation with appropriate market fluctuations.\",\n        longDescription: \"This API provides simulated cryptocurrency market data for major coins and tokens. It includes current prices, historical data, and market statistics with realistic price fluctuations. All data follows real-world patterns of volatility for each cryptocurrency, making it suitable for developing and testing cryptocurrency dashboards, portfolio trackers, or trading interfaces.\",\n        endpoints: [\n            {\n                path: \"/api/services/crypto\",\n                method: \"GET\",\n                description: \"Get all cryptocurrency data\"\n            },\n            {\n                path: \"/api/services/crypto?id=bitcoin\",\n                method: \"GET\",\n                description: \"Get data for a specific cryptocurrency by ID\"\n            },\n            {\n                path: \"/api/services/crypto?coin=btc\",\n                method: \"GET\",\n                description: \"Get data for a specific cryptocurrency by symbol\"\n            },\n            {\n                path: \"/api/services/crypto?id=ethereum&historical=true\",\n                method: \"GET\",\n                description: \"Get historical price data\"\n            },\n            {\n                path: \"/api/services/crypto?id=ethereum&historical=true&days=30\",\n                method: \"GET\",\n                description: \"Get historical price data for specific days\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"id\",\n                type: \"string\",\n                description: \"Cryptocurrency ID (e.g., bitcoin, ethereum)\",\n                required: false\n            },\n            {\n                name: \"coin\",\n                type: \"string\",\n                description: \"Cryptocurrency symbol (e.g., btc, eth)\",\n                required: false\n            },\n            {\n                name: \"historical\",\n                type: \"boolean\",\n                description: \"Get historical price data instead of current data\",\n                required: false,\n                default: \"false\"\n            },\n            {\n                name: \"days\",\n                type: \"integer\",\n                description: \"Number of days for historical data (1-365)\",\n                required: false,\n                default: \"7\"\n            },\n            {\n                name: \"vs_currency\",\n                type: \"string\",\n                description: \"Currency to display prices in\",\n                required: false,\n                default: \"usd\"\n            }\n        ],\n        example: {\n            request: \"/api/services/crypto?id=bitcoin\",\n            response: {\n                \"id\": \"bitcoin\",\n                \"symbol\": \"btc\",\n                \"name\": \"Bitcoin\",\n                \"image\": \"https://assets.coingecko.com/coins/images/1/large/bitcoin.png\",\n                \"current_price\": 48523.42,\n                \"market_cap\": 927389283749,\n                \"market_cap_rank\": 1,\n                \"fully_diluted_valuation\": 1027389283749,\n                \"total_volume\": 29384756382,\n                \"high_24h\": 49827.36,\n                \"low_24h\": 47982.58,\n                \"price_change_24h\": 537.84,\n                \"price_change_percentage_24h\": \"1.12\",\n                \"market_cap_change_24h\": 10291827364,\n                \"market_cap_change_percentage_24h\": \"1.12\",\n                \"circulating_supply\": 19000000,\n                \"total_supply\": 21000000,\n                \"max_supply\": 21000000,\n                \"ath\": 69000,\n                \"ath_change_percentage\": \"-29.67\",\n                \"ath_date\": \"2021-11-10T14:24:11.849Z\",\n                \"atl\": 67.81,\n                \"atl_change_percentage\": \"71461.1\",\n                \"atl_date\": \"2013-07-06T00:00:00.000Z\",\n                \"roi\": null,\n                \"last_updated\": \"2023-04-05T12:30:09.825Z\"\n            }\n        },\n        category: \"finance\",\n        icon: \"\\uD83D\\uDCB0\"\n    },\n    {\n        id: \"quotes\",\n        name: \"Quotes API\",\n        description: \"Access a collection of inspirational and famous quotes with filtering by author, tag, or keyword. Perfect for adding motivational content to apps.\",\n        longDescription: \"This API provides access to a curated collection of inspirational and famous quotes from notable individuals across history. Each quote includes the text, author attribution, and categorization tags. You can retrieve random quotes or filter by specific authors, themes, or keywords. Perfect for adding motivational content to applications, creating daily quote features, or building inspiration-focused services.\",\n        endpoints: [\n            {\n                path: \"/api/services/quotes\",\n                method: \"GET\",\n                description: \"Get a random quote\"\n            },\n            {\n                path: \"/api/services/quotes?count=5\",\n                method: \"GET\",\n                description: \"Get multiple random quotes\"\n            },\n            {\n                path: \"/api/services/quotes?author=Einstein\",\n                method: \"GET\",\n                description: \"Get quotes by a specific author\"\n            },\n            {\n                path: \"/api/services/quotes?tag=inspiration\",\n                method: \"GET\",\n                description: \"Get quotes with a specific tag\"\n            },\n            {\n                path: \"/api/services/quotes?id=1\",\n                method: \"GET\",\n                description: \"Get a specific quote by ID\"\n            },\n            {\n                path: \"/api/services/quotes?metadata=true\",\n                method: \"GET\",\n                description: \"Get quote metadata (available tags, authors, etc.)\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"count\",\n                type: \"integer\",\n                description: \"Number of quotes to retrieve (1-10)\",\n                required: false,\n                default: \"1\"\n            },\n            {\n                name: \"author\",\n                type: \"string\",\n                description: \"Filter quotes by author name (case-insensitive, partial match)\",\n                required: false\n            },\n            {\n                name: \"tag\",\n                type: \"string\",\n                description: \"Filter quotes by tag (inspiration, wisdom, success, etc.)\",\n                required: false\n            },\n            {\n                name: \"id\",\n                type: \"integer\",\n                description: \"Get a specific quote by ID\",\n                required: false\n            },\n            {\n                name: \"metadata\",\n                type: \"boolean\",\n                description: \"Get metadata about available quotes\",\n                required: false,\n                default: \"false\"\n            }\n        ],\n        example: {\n            request: \"/api/services/quotes\",\n            response: {\n                \"status\": \"success\",\n                \"count\": 1,\n                \"quotes\": [\n                    {\n                        \"id\": 5,\n                        \"text\": \"The greatest glory in living lies not in never falling, but in rising every time we fall.\",\n                        \"author\": \"Nelson Mandela\",\n                        \"tags\": [\n                            \"resilience\",\n                            \"life\",\n                            \"inspiration\"\n                        ]\n                    }\n                ]\n            }\n        },\n        category: \"content\",\n        icon: \"\\uD83D\\uDCAC\"\n    },\n    {\n        id: \"todo\",\n        name: \"Todo API\",\n        description: \"A RESTful API for managing todo items with support for creating, updating, completing, and filtering tasks. Ideal for todo list applications.\",\n        longDescription: \"This API provides a complete solution for managing todo lists and task management applications. It supports creating, reading, updating, and deleting todo items, as well as filtering by completion status, priority, and tags. Each todo item can have attributes like title, completion status, priority level, due date, and categorization tags. The API maintains state during your session, allowing for realistic todo application development without database setup.\",\n        endpoints: [\n            {\n                path: \"/api/services/todo\",\n                method: \"GET\",\n                description: \"Get all todo items\"\n            },\n            {\n                path: \"/api/services/todo?completed=false\",\n                method: \"GET\",\n                description: \"Get incomplete todo items\"\n            },\n            {\n                path: \"/api/services/todo?priority=high\",\n                method: \"GET\",\n                description: \"Get high priority todo items\"\n            },\n            {\n                path: \"/api/services/todo?tag=work\",\n                method: \"GET\",\n                description: \"Get todo items with a specific tag\"\n            },\n            {\n                path: \"/api/services/todo/:id\",\n                method: \"GET\",\n                description: \"Get a specific todo item by ID\"\n            },\n            {\n                path: \"/api/services/todo\",\n                method: \"POST\",\n                description: \"Create a new todo item\"\n            },\n            {\n                path: \"/api/services/todo/:id\",\n                method: \"PUT\",\n                description: \"Update a todo item\"\n            },\n            {\n                path: \"/api/services/todo/:id\",\n                method: \"DELETE\",\n                description: \"Delete a todo item\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"completed\",\n                type: \"boolean\",\n                description: \"Filter by completion status\",\n                required: false\n            },\n            {\n                name: \"priority\",\n                type: \"string\",\n                description: \"Filter by priority (low, medium, high)\",\n                required: false\n            },\n            {\n                name: \"tag\",\n                type: \"string\",\n                description: \"Filter by tag\",\n                required: false\n            }\n        ],\n        requestBody: {\n            type: \"object\",\n            properties: {\n                title: {\n                    type: \"string\",\n                    description: \"Title of the todo item\",\n                    required: true\n                },\n                completed: {\n                    type: \"boolean\",\n                    description: \"Completion status\",\n                    required: false,\n                    default: false\n                },\n                priority: {\n                    type: \"string\",\n                    description: \"Priority level (low, medium, high)\",\n                    required: false,\n                    default: \"medium\"\n                },\n                dueDate: {\n                    type: \"string\",\n                    description: \"Due date (ISO format)\",\n                    required: false\n                },\n                tags: {\n                    type: \"array\",\n                    description: \"Array of tag strings\",\n                    required: false\n                }\n            }\n        },\n        example: {\n            request: \"/api/services/todo\",\n            response: {\n                \"count\": 5,\n                \"todos\": [\n                    {\n                        \"id\": \"1\",\n                        \"title\": \"Complete project documentation\",\n                        \"completed\": false,\n                        \"priority\": \"high\",\n                        \"dueDate\": \"2023-05-11T10:00:00.000Z\",\n                        \"tags\": [\n                            \"work\",\n                            \"documentation\"\n                        ]\n                    },\n                    {\n                        \"id\": \"2\",\n                        \"title\": \"Buy groceries\",\n                        \"completed\": false,\n                        \"priority\": \"medium\",\n                        \"dueDate\": \"2023-05-12T10:00:00.000Z\",\n                        \"tags\": [\n                            \"personal\",\n                            \"shopping\"\n                        ]\n                    }\n                ]\n            }\n        },\n        category: \"development\",\n        icon: \"✅\"\n    },\n    {\n        id: \"countries\",\n        name: \"Countries API\",\n        description: \"Comprehensive information about countries including demographics, geography, languages, currencies, and more. Perfect for building location-based features.\",\n        longDescription: \"This API provides detailed information about countries around the world. Each country entry includes comprehensive data about geography, population, languages, currencies, flags, timezones, and more. You can search and filter countries by various criteria including name, region, language, currency, and population range. This API is ideal for building location selectors, international e-commerce applications, travel apps, or educational tools.\",\n        endpoints: [\n            {\n                path: \"/api/services/countries\",\n                method: \"GET\",\n                description: \"Get data for all countries\"\n            },\n            {\n                path: \"/api/services/countries?name=united\",\n                method: \"GET\",\n                description: \"Search countries by name\"\n            },\n            {\n                path: \"/api/services/countries?code=US\",\n                method: \"GET\",\n                description: \"Get country by country code\"\n            },\n            {\n                path: \"/api/services/countries?region=Europe\",\n                method: \"GET\",\n                description: \"Filter countries by region\"\n            },\n            {\n                path: \"/api/services/countries?language=Spanish\",\n                method: \"GET\",\n                description: \"Filter countries by language\"\n            },\n            {\n                path: \"/api/services/countries?currency=Euro\",\n                method: \"GET\",\n                description: \"Filter countries by currency\"\n            },\n            {\n                path: \"/api/services/countries?metadata=true\",\n                method: \"GET\",\n                description: \"Get countries metadata\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"name\",\n                type: \"string\",\n                description: \"Search countries by name (partial match)\",\n                required: false\n            },\n            {\n                name: \"code\",\n                type: \"string\",\n                description: \"Country code (2-letter ISO code)\",\n                required: false\n            },\n            {\n                name: \"region\",\n                type: \"string\",\n                description: \"Filter by region (Europe, Asia, Africa, etc.)\",\n                required: false\n            },\n            {\n                name: \"subregion\",\n                type: \"string\",\n                description: \"Filter by subregion (Western Europe, Southeast Asia, etc.)\",\n                required: false\n            },\n            {\n                name: \"language\",\n                type: \"string\",\n                description: \"Filter by language (English, Spanish, etc.)\",\n                required: false\n            },\n            {\n                name: \"currency\",\n                type: \"string\",\n                description: \"Filter by currency name or code\",\n                required: false\n            },\n            {\n                name: \"minPopulation\",\n                type: \"integer\",\n                description: \"Minimum population threshold\",\n                required: false\n            },\n            {\n                name: \"maxPopulation\",\n                type: \"integer\",\n                description: \"Maximum population threshold\",\n                required: false\n            },\n            {\n                name: \"metadata\",\n                type: \"boolean\",\n                description: \"Get metadata about available regions, languages, etc.\",\n                required: false,\n                default: \"false\"\n            }\n        ],\n        example: {\n            request: \"/api/services/countries?code=US\",\n            response: {\n                \"name\": \"United States\",\n                \"code\": \"US\",\n                \"capital\": \"Washington, D.C.\",\n                \"region\": \"Americas\",\n                \"subregion\": \"North America\",\n                \"population\": 331002651,\n                \"area\": 9833517,\n                \"languages\": [\n                    {\n                        \"name\": \"English\",\n                        \"iso639_1\": \"en\"\n                    }\n                ],\n                \"currencies\": [\n                    {\n                        \"code\": \"USD\",\n                        \"name\": \"United States Dollar\",\n                        \"symbol\": \"$\"\n                    }\n                ],\n                \"flag\": \"\\uD83C\\uDDFA\\uD83C\\uDDF8\",\n                \"timezones\": [\n                    \"UTC-12:00\",\n                    \"UTC-11:00\",\n                    \"UTC-10:00\",\n                    \"UTC-09:00\",\n                    \"UTC-08:00\",\n                    \"UTC-07:00\",\n                    \"UTC-06:00\",\n                    \"UTC-05:00\",\n                    \"UTC-04:00\",\n                    \"UTC+10:00\",\n                    \"UTC+12:00\"\n                ],\n                \"continents\": [\n                    \"North America\"\n                ],\n                \"borders\": [\n                    \"CAN\",\n                    \"MEX\"\n                ],\n                \"independent\": true\n            }\n        },\n        category: \"geo\",\n        icon: \"\\uD83C\\uDF0E\"\n    },\n    {\n        id: \"joke\",\n        name: \"Joke API\",\n        description: \"Access a collection of jokes with filtering by category and type. Perfect for adding humor to applications.\",\n        longDescription: \"This API provides a collection of jokes that can be filtered by category, type, and safety level. Each joke includes categorization and type information. You can retrieve random jokes or filter by specific categories like programming, science, food, etc. This is perfect for adding a humor feature to your applications or building joke-of-the-day functionality.\",\n        endpoints: [\n            {\n                path: \"/api/services/joke\",\n                method: \"GET\",\n                description: \"Get a random joke\"\n            },\n            {\n                path: \"/api/services/joke?category=programming\",\n                method: \"GET\",\n                description: \"Get a joke from a specific category\"\n            },\n            {\n                path: \"/api/services/joke?type=one-liner\",\n                method: \"GET\",\n                description: \"Get a joke of a specific type\"\n            },\n            {\n                path: \"/api/services/joke?id=1\",\n                method: \"GET\",\n                description: \"Get a specific joke by ID\"\n            },\n            {\n                path: \"/api/services/joke?metadata=true\",\n                method: \"GET\",\n                description: \"Get joke metadata (available categories, types, etc.)\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"category\",\n                type: \"string\",\n                description: \"Filter jokes by category (programming, science, food, etc.)\",\n                required: false\n            },\n            {\n                name: \"type\",\n                type: \"string\",\n                description: \"Filter jokes by type (one-liner, question-answer, story)\",\n                required: false\n            },\n            {\n                name: \"id\",\n                type: \"integer\",\n                description: \"Get a specific joke by ID\",\n                required: false\n            },\n            {\n                name: \"safe\",\n                type: \"boolean\",\n                description: \"Ensure joke is safe for all audiences\",\n                required: false,\n                default: \"true\"\n            },\n            {\n                name: \"metadata\",\n                type: \"boolean\",\n                description: \"Get metadata about available jokes\",\n                required: false,\n                default: \"false\"\n            }\n        ],\n        example: {\n            request: \"/api/services/joke\",\n            response: {\n                \"status\": \"success\",\n                \"joke\": {\n                    \"id\": 13,\n                    \"text\": \"How many programmers does it take to change a light bulb? None, that's a hardware problem.\",\n                    \"category\": \"programming\",\n                    \"safe\": true,\n                    \"type\": \"question-answer\"\n                }\n            }\n        },\n        category: \"entertainment\",\n        icon: \"\\uD83D\\uDE02\"\n    },\n    {\n        id: \"colors\",\n        name: \"Colors API\",\n        description: \"Access color information, conversions, generate palettes, and get color psychology data. Perfect for design tools and applications.\",\n        longDescription: \"This API provides comprehensive information about colors including RGB, HEX, and HSL values, complementary colors, and color psychology. It allows you to generate color palettes (complementary, analogous, triadic, etc.), get random colors, and search colors by name or family. This is ideal for design applications, creative tools, or any project requiring color management.\",\n        endpoints: [\n            {\n                path: \"/api/services/colors\",\n                method: \"GET\",\n                description: \"Get all colors\"\n            },\n            {\n                path: \"/api/services/colors?id=5\",\n                method: \"GET\",\n                description: \"Get a specific color by ID\"\n            },\n            {\n                path: \"/api/services/colors?name=blue\",\n                method: \"GET\",\n                description: \"Get a specific color by name\"\n            },\n            {\n                path: \"/api/services/colors?family=primary\",\n                method: \"GET\",\n                description: \"Get colors by family (primary, secondary, etc.)\"\n            },\n            {\n                path: \"/api/services/colors?random=true\",\n                method: \"GET\",\n                description: \"Generate a random color\"\n            },\n            {\n                path: \"/api/services/colors?palette=1\",\n                method: \"GET\",\n                description: \"Get a predefined color palette by ID or name\"\n            },\n            {\n                path: \"/api/services/colors?seed=FF0000&type=complementary\",\n                method: \"GET\",\n                description: \"Generate a custom palette from a seed color\"\n            },\n            {\n                path: \"/api/services/colors?metadata=true\",\n                method: \"GET\",\n                description: \"Get color metadata (available families, palette types, etc.)\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"id\",\n                type: \"integer\",\n                description: \"Get a specific color by ID\",\n                required: false\n            },\n            {\n                name: \"name\",\n                type: \"string\",\n                description: \"Get a specific color by name\",\n                required: false\n            },\n            {\n                name: \"family\",\n                type: \"string\",\n                description: \"Filter colors by family (primary, secondary, tertiary, neutral, etc.)\",\n                required: false\n            },\n            {\n                name: \"random\",\n                type: \"boolean\",\n                description: \"Generate a random color\",\n                required: false,\n                default: \"false\"\n            },\n            {\n                name: \"palette\",\n                type: \"string\",\n                description: \"Get a predefined palette by ID or name\",\n                required: false\n            },\n            {\n                name: \"seed\",\n                type: \"string\",\n                description: \"Seed color for generating a custom palette (hex format)\",\n                required: false\n            },\n            {\n                name: \"type\",\n                type: \"string\",\n                description: \"Type of palette to generate (complementary, analogous, triadic, monochromatic)\",\n                required: false,\n                default: \"complementary\"\n            },\n            {\n                name: \"count\",\n                type: \"integer\",\n                description: \"Number of colors in generated palette (max 10)\",\n                required: false,\n                default: \"4\"\n            },\n            {\n                name: \"metadata\",\n                type: \"boolean\",\n                description: \"Get metadata about available colors and palettes\",\n                required: false,\n                default: \"false\"\n            }\n        ],\n        example: {\n            request: \"/api/services/colors?random=true\",\n            response: {\n                \"hex\": \"#4F9D63\",\n                \"rgb\": {\n                    \"r\": 79,\n                    \"g\": 157,\n                    \"b\": 99\n                },\n                \"hsl\": {\n                    \"h\": 137,\n                    \"s\": 33,\n                    \"l\": 46\n                },\n                \"complementary\": \"#9D4F89\"\n            }\n        },\n        category: \"design\",\n        icon: \"\\uD83C\\uDFA8\"\n    },\n    {\n        id: \"dictionary\",\n        name: \"Dictionary API\",\n        description: \"Access word definitions, pronunciations, synonyms, antonyms, and etymology information for educational and reference applications.\",\n        longDescription: \"This API provides comprehensive dictionary data including word definitions, pronunciations, etymology, synonyms, antonyms, and usage examples. You can search words, get random words, or filter by word type. It is perfect for educational applications, language learning tools, or any project requiring rich linguistic data.\",\n        endpoints: [\n            {\n                path: \"/api/services/dictionary\",\n                method: \"GET\",\n                description: \"Get all words (with pagination)\"\n            },\n            {\n                path: \"/api/services/dictionary?word=serendipity\",\n                method: \"GET\",\n                description: \"Get a specific word and its details\"\n            },\n            {\n                path: \"/api/services/dictionary?type=adjective\",\n                method: \"GET\",\n                description: \"Get words by type (noun, verb, adjective, etc.)\"\n            },\n            {\n                path: \"/api/services/dictionary?random=true\",\n                method: \"GET\",\n                description: \"Get a random word\"\n            },\n            {\n                path: \"/api/services/dictionary?synonymsFor=eloquent\",\n                method: \"GET\",\n                description: \"Get synonyms for a specific word\"\n            },\n            {\n                path: \"/api/services/dictionary?antonymsFor=ephemeral\",\n                method: \"GET\",\n                description: \"Get antonyms for a specific word\"\n            },\n            {\n                path: \"/api/services/dictionary?search=time\",\n                method: \"GET\",\n                description: \"Search for words (matches in word, definition, or example)\"\n            },\n            {\n                path: \"/api/services/dictionary?metadata=true\",\n                method: \"GET\",\n                description: \"Get dictionary metadata\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"word\",\n                type: \"string\",\n                description: \"Get information for a specific word\",\n                required: false\n            },\n            {\n                name: \"type\",\n                type: \"string\",\n                description: \"Filter words by type (noun, verb, adjective, etc.)\",\n                required: false\n            },\n            {\n                name: \"random\",\n                type: \"boolean\",\n                description: \"Get a random word\",\n                required: false,\n                default: \"false\"\n            },\n            {\n                name: \"synonymsFor\",\n                type: \"string\",\n                description: \"Get synonyms for a specific word\",\n                required: false\n            },\n            {\n                name: \"antonymsFor\",\n                type: \"string\",\n                description: \"Get antonyms for a specific word\",\n                required: false\n            },\n            {\n                name: \"search\",\n                type: \"string\",\n                description: \"Search term to find in words, definitions, or examples\",\n                required: false\n            },\n            {\n                name: \"limit\",\n                type: \"integer\",\n                description: \"Maximum number of results to return\",\n                required: false,\n                default: \"10\"\n            },\n            {\n                name: \"metadata\",\n                type: \"boolean\",\n                description: \"Get metadata about the dictionary\",\n                required: false,\n                default: \"false\"\n            }\n        ],\n        example: {\n            request: \"/api/services/dictionary?word=serendipity\",\n            response: {\n                \"word\": \"serendipity\",\n                \"pronunciation\": \"/ˌsɛrənˈdɪpɪti/\",\n                \"type\": \"noun\",\n                \"definition\": \"The occurrence and development of events by chance in a happy or beneficial way.\",\n                \"example\": \"The discovery of penicillin was a serendipity.\",\n                \"synonyms\": [\n                    \"chance\",\n                    \"fate\",\n                    \"destiny\",\n                    \"luck\",\n                    \"happy accident\"\n                ],\n                \"antonyms\": [\n                    \"misfortune\",\n                    \"design\",\n                    \"intent\"\n                ],\n                \"origin\": \"1754: coined by Horace Walpole, suggested by The Three Princes of Serendip, the title of a fairy tale in which the heroes 'were always making discoveries, by accidents and sagacity, of things they were not in quest of'\",\n                \"pluralForm\": \"serendipities\"\n            }\n        },\n        category: \"education\",\n        icon: \"\\uD83D\\uDCDA\"\n    },\n    {\n        id: \"news\",\n        name: \"News API\",\n        description: \"Access simulated news articles, headlines, and sources for building news applications and aggregators.\",\n        longDescription: \"This API provides access to a collection of simulated news articles across various categories including technology, business, sports, health, science, and entertainment. You can retrieve full articles or headlines, filter by category or source, search by keyword, and sort by publication date. Perfect for building news aggregators, content platforms, or applications requiring diverse textual content.\",\n        endpoints: [\n            {\n                path: \"/api/services/news\",\n                method: \"GET\",\n                description: \"Get recent news articles (with pagination)\"\n            },\n            {\n                path: \"/api/services/news?id=5\",\n                method: \"GET\",\n                description: \"Get a specific article by ID\"\n            },\n            {\n                path: \"/api/services/news?category=technology\",\n                method: \"GET\",\n                description: \"Get articles by category\"\n            },\n            {\n                path: \"/api/services/news?source=tech-daily\",\n                method: \"GET\",\n                description: \"Get articles from a specific source\"\n            },\n            {\n                path: \"/api/services/news?q=climate\",\n                method: \"GET\",\n                description: \"Search articles by keyword\"\n            },\n            {\n                path: \"/api/services/news?from=2023-04-01&to=2023-04-15\",\n                method: \"GET\",\n                description: \"Get articles within a date range\"\n            },\n            {\n                path: \"/api/services/news?headlines=true\",\n                method: \"GET\",\n                description: \"Get headlines only (without full content)\"\n            },\n            {\n                path: \"/api/services/news?sortBy=publishedAt&order=desc\",\n                method: \"GET\",\n                description: \"Sort articles by publication date\"\n            },\n            {\n                path: \"/api/services/news?sources=true\",\n                method: \"GET\",\n                description: \"Get list of all news sources\"\n            },\n            {\n                path: \"/api/services/news?metadata=true\",\n                method: \"GET\",\n                description: \"Get news API metadata\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"id\",\n                type: \"integer\",\n                description: \"Get a specific article by ID\",\n                required: false\n            },\n            {\n                name: \"category\",\n                type: \"string\",\n                description: \"Filter articles by category (business, technology, sports, etc.)\",\n                required: false\n            },\n            {\n                name: \"source\",\n                type: \"string\",\n                description: \"Filter articles by source ID\",\n                required: false\n            },\n            {\n                name: \"q\",\n                type: \"string\",\n                description: \"Search term to find in article title, description, or content\",\n                required: false\n            },\n            {\n                name: \"from\",\n                type: \"string\",\n                description: \"Start date for articles (YYYY-MM-DD format)\",\n                required: false\n            },\n            {\n                name: \"to\",\n                type: \"string\",\n                description: \"End date for articles (YYYY-MM-DD format)\",\n                required: false\n            },\n            {\n                name: \"headlines\",\n                type: \"boolean\",\n                description: \"Get headlines only (without full content)\",\n                required: false,\n                default: \"false\"\n            },\n            {\n                name: \"sortBy\",\n                type: \"string\",\n                description: \"Sort field (publishedAt, title)\",\n                required: false,\n                default: \"publishedAt\"\n            },\n            {\n                name: \"order\",\n                type: \"string\",\n                description: \"Sort order (asc, desc)\",\n                required: false,\n                default: \"desc\"\n            },\n            {\n                name: \"limit\",\n                type: \"integer\",\n                description: \"Number of articles per page\",\n                required: false,\n                default: \"10\"\n            },\n            {\n                name: \"page\",\n                type: \"integer\",\n                description: \"Page number for pagination\",\n                required: false,\n                default: \"1\"\n            },\n            {\n                name: \"sources\",\n                type: \"boolean\",\n                description: \"Get list of all news sources\",\n                required: false,\n                default: \"false\"\n            },\n            {\n                name: \"sourceDetails\",\n                type: \"string\",\n                description: \"Get details for a specific source by ID\",\n                required: false\n            },\n            {\n                name: \"metadata\",\n                type: \"boolean\",\n                description: \"Get metadata about news API\",\n                required: false,\n                default: \"false\"\n            }\n        ],\n        example: {\n            request: \"/api/services/news?category=technology&limit=1\",\n            response: {\n                \"status\": \"ok\",\n                \"totalResults\": 5,\n                \"page\": 1,\n                \"limit\": 1,\n                \"totalPages\": 5,\n                \"articles\": [\n                    {\n                        \"id\": 1,\n                        \"title\": \"Tech Giants Unveil Revolutionary AI Assistant\",\n                        \"description\": \"Major technology companies announce a new generation of AI assistants with unprecedented natural language capabilities.\",\n                        \"content\": \"Leading technology companies have revealed their latest developments in artificial intelligence, showcasing assistants that can understand and respond to complex human instructions with remarkable accuracy. These new systems demonstrate significant improvements in reasoning, creativity, and factual knowledge compared to previous generations. Experts suggest these advancements could transform industries from customer service to content creation.\",\n                        \"author\": \"Sarah Johnson\",\n                        \"source\": \"tech-daily\",\n                        \"url\": \"https://example.com/tech-giants-ai\",\n                        \"imageUrl\": \"https://picsum.photos/id/1/800/450\",\n                        \"publishedAt\": \"2023-04-15\",\n                        \"category\": \"technology\",\n                        \"tags\": [\n                            \"AI\",\n                            \"machine learning\",\n                            \"technology\"\n                        ]\n                    }\n                ]\n            }\n        },\n        category: \"content\",\n        icon: \"\\uD83D\\uDCF0\"\n    },\n    {\n        id: \"image-generation\",\n        name: \"Image Generation API\",\n        description: \"Generate SVG images, patterns, charts, and QR codes based on customizable parameters.\",\n        longDescription: \"This advanced API creates SVG images on-demand with fully customizable parameters. Generate abstract shapes, patterns like grids or dots, simple QR codes, and interactive charts. All outputs are in SVG format which is lightweight, scalable, and can be used directly in web applications. Perfect for placeholder images, data visualization, or dynamic content creation.\",\n        endpoints: [\n            {\n                path: \"/api/services/image-generation\",\n                method: \"GET\",\n                description: \"Generate random shapes (default)\"\n            },\n            {\n                path: \"/api/services/image-generation?type=pattern&patternType=grid\",\n                method: \"GET\",\n                description: \"Generate a grid pattern\"\n            },\n            {\n                path: \"/api/services/image-generation?type=pattern&patternType=dots\",\n                method: \"GET\",\n                description: \"Generate a dots pattern\"\n            },\n            {\n                path: \"/api/services/image-generation?type=pattern&patternType=stripes\",\n                method: \"GET\",\n                description: \"Generate stripes pattern\"\n            },\n            {\n                path: \"/api/services/image-generation?type=qrcode&text=Hello World\",\n                method: \"GET\",\n                description: \"Generate a simple QR code\"\n            },\n            {\n                path: \"/api/services/image-generation?type=chart&width=400&height=300\",\n                method: \"GET\",\n                description: \"Generate a bar chart with random data\"\n            },\n            {\n                path: \"/api/services/image-generation?width=300&height=200&numShapes=10\",\n                method: \"GET\",\n                description: \"Customize size and number of shapes\"\n            },\n            {\n                path: \"/api/services/image-generation?format=json\",\n                method: \"GET\",\n                description: \"Get SVG as JSON response with metadata\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"type\",\n                type: \"string\",\n                description: \"Type of image to generate (shape, pattern, qrcode, chart)\",\n                required: false,\n                default: \"shape\"\n            },\n            {\n                name: \"width\",\n                type: \"integer\",\n                description: \"Width of the generated image in pixels\",\n                required: false,\n                default: \"200\"\n            },\n            {\n                name: \"height\",\n                type: \"integer\",\n                description: \"Height of the generated image in pixels\",\n                required: false,\n                default: \"200\"\n            },\n            {\n                name: \"patternType\",\n                type: \"string\",\n                description: \"Type of pattern (grid, dots, stripes, zigzag, checkerboard)\",\n                required: false,\n                default: \"grid\"\n            },\n            {\n                name: \"text\",\n                type: \"string\",\n                description: \"Text to encode in QR code\",\n                required: false,\n                default: \"Hello World\"\n            },\n            {\n                name: \"numShapes\",\n                type: \"integer\",\n                description: \"Number of shapes to generate\",\n                required: false,\n                default: \"5\"\n            },\n            {\n                name: \"seed\",\n                type: \"integer\",\n                description: \"Random seed for deterministic generation\",\n                required: false\n            },\n            {\n                name: \"format\",\n                type: \"string\",\n                description: \"Response format (svg or json)\",\n                required: false,\n                default: \"svg\"\n            },\n            {\n                name: \"backgroundColor\",\n                type: \"string\",\n                description: \"Background color in hex format\",\n                required: false,\n                default: \"white\"\n            },\n            {\n                name: \"color1\",\n                type: \"string\",\n                description: \"Primary color for patterns in hex format\",\n                required: false\n            },\n            {\n                name: \"color2\",\n                type: \"string\",\n                description: \"Secondary color for patterns in hex format\",\n                required: false\n            }\n        ],\n        example: {\n            request: \"/api/services/image-generation?type=pattern&patternType=dots&width=200&height=200&color1=%23ff5733\",\n            response: '<svg width=\"200\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">...</svg>'\n        },\n        category: \"media\",\n        icon: \"\\uD83C\\uDFA8\"\n    },\n    {\n        id: \"text-to-speech\",\n        name: \"Text-to-Speech API\",\n        description: \"Convert text to synthesized speech with customizable voice profiles, pitch, and speed.\",\n        longDescription: \"This API converts text input into synthesized speech audio, available in multiple voice profiles (neutral, male, female, child, robot). Control parameters like speed, pitch, and volume to customize the output. Audio is provided in WAV format, either as a base64-encoded string or as raw audio data. Ideal for accessibility features, voice interfaces, or content narration in applications.\",\n        endpoints: [\n            {\n                path: \"/api/services/text-to-speech?text=Hello World\",\n                method: \"GET\",\n                description: \"Convert text to speech (default voice)\"\n            },\n            {\n                path: \"/api/services/text-to-speech?text=Hello World&voice=female\",\n                method: \"GET\",\n                description: \"Convert text with female voice\"\n            },\n            {\n                path: \"/api/services/text-to-speech?text=Hello World&voice=male\",\n                method: \"GET\",\n                description: \"Convert text with male voice\"\n            },\n            {\n                path: \"/api/services/text-to-speech?text=Hello World&voice=robot\",\n                method: \"GET\",\n                description: \"Convert text with robot voice\"\n            },\n            {\n                path: \"/api/services/text-to-speech?text=Hello World&speed=0.8\",\n                method: \"GET\",\n                description: \"Adjust speech speed (slower)\"\n            },\n            {\n                path: \"/api/services/text-to-speech?text=Hello World&pitch=1.5\",\n                method: \"GET\",\n                description: \"Adjust voice pitch (higher)\"\n            },\n            {\n                path: \"/api/services/text-to-speech?text=Hello World&quality=enhanced\",\n                method: \"GET\",\n                description: \"Use enhanced quality voice synthesis\"\n            },\n            {\n                path: \"/api/services/text-to-speech?text=Hello World&format=audio\",\n                method: \"GET\",\n                description: \"Get direct audio output (WAV format)\"\n            }\n        ],\n        parameters: [\n            {\n                name: \"text\",\n                type: \"string\",\n                description: \"Text to convert to speech (max 200 characters)\",\n                required: true\n            },\n            {\n                name: \"voice\",\n                type: \"string\",\n                description: \"Voice profile (neutral, male, female, child, robot)\",\n                required: false,\n                default: \"neutral\"\n            },\n            {\n                name: \"speed\",\n                type: \"float\",\n                description: \"Speech speed (0.5 to 2.0)\",\n                required: false,\n                default: \"1.0\"\n            },\n            {\n                name: \"pitch\",\n                type: \"float\",\n                description: \"Voice pitch (0.5 to 2.0)\",\n                required: false,\n                default: \"1.0\"\n            },\n            {\n                name: \"volume\",\n                type: \"float\",\n                description: \"Audio volume (0.1 to 1.0)\",\n                required: false,\n                default: \"0.5\"\n            },\n            {\n                name: \"format\",\n                type: \"string\",\n                description: \"Response format (json or audio)\",\n                required: false,\n                default: \"json\"\n            },\n            {\n                name: \"quality\",\n                type: \"string\",\n                description: \"Voice quality (standard or enhanced)\",\n                required: false,\n                default: \"standard\"\n            }\n        ],\n        example: {\n            request: \"/api/services/text-to-speech?text=Welcome to the text to speech API\",\n            response: {\n                \"status\": \"success\",\n                \"text\": \"Welcome to the text to speech API\",\n                \"audio\": {\n                    \"format\": \"wav\",\n                    \"encoding\": \"base64\",\n                    \"data\": \"UklGRiT...\"\n                },\n                \"parameters\": {\n                    \"voice\": \"neutral\",\n                    \"speed\": 1,\n                    \"pitch\": 1,\n                    \"volume\": 0.5\n                }\n            }\n        },\n        category: \"media\",\n        icon: \"\\uD83D\\uDD0A\"\n    }\n];\nfunction handler(req, res) {\n    // Set CORS headers\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n    res.setHeader(\"Access-Control-Allow-Methods\", \"GET, OPTIONS\");\n    res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n    // Handle preflight OPTIONS request\n    if (req.method === \"OPTIONS\") {\n        return res.status(200).end();\n    }\n    // Only allow GET requests\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        // Get query parameters\n        const serviceId = req.query.id;\n        // If serviceId is provided, return specific service\n        if (serviceId) {\n            const service = apiServices.find((s)=>s.id === serviceId);\n            if (!service) {\n                return res.status(404).json({\n                    error: \"Service not found\"\n                });\n            }\n            return res.status(200).json(service);\n        }\n        // Otherwise return all services\n        return res.status(200).json({\n            services: apiServices,\n            count: apiServices.length,\n            baseUrl: `${req.headers.host || \"localhost:5000\"}`\n        });\n    } catch (error) {\n        console.error(\"Error fetching API services:\", error);\n        return res.status(500).json({\n            error: \"Failed to fetch API services\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/services/index.js\n");

/***/ }),

/***/ "(api)/./node_modules/next/dist/server/future/route-kind.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-kind.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RouteKind\", ({\n    enumerable: true,\n    get: function() {\n        return RouteKind;\n    }\n}));\nvar RouteKind;\n(function(RouteKind) {\n    RouteKind[/**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ \"PAGES\"] = \"PAGES\";\n    RouteKind[/**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ \"PAGES_API\"] = \"PAGES_API\";\n    RouteKind[/**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ \"APP_PAGE\"] = \"APP_PAGE\";\n    RouteKind[/**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ \"APP_ROUTE\"] = \"APP_ROUTE\";\n})(RouteKind || (RouteKind = {}));\n\n//# sourceMappingURL=route-kind.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDZDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLElBQUksRUFBRSxHQUFHO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixJQUFJLEVBQUUsR0FBRztBQUNsQztBQUNBLENBQUMsOEJBQThCOztBQUUvQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dvcmtzcGFjZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kLmpzP2MxZjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSb3V0ZUtpbmRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFJvdXRlS2luZDtcbiAgICB9XG59KTtcbnZhciBSb3V0ZUtpbmQ7XG4oZnVuY3Rpb24oUm91dGVLaW5kKSB7XG4gICAgUm91dGVLaW5kWy8qKlxuICAgKiBgUEFHRVNgIHJlcHJlc2VudHMgYWxsIHRoZSBSZWFjdCBwYWdlcyB0aGF0IGFyZSB1bmRlciBgcGFnZXMvYC5cbiAgICovIFwiUEFHRVNcIl0gPSBcIlBBR0VTXCI7XG4gICAgUm91dGVLaW5kWy8qKlxuICAgKiBgUEFHRVNfQVBJYCByZXByZXNlbnRzIGFsbCB0aGUgQVBJIHJvdXRlcyB1bmRlciBgcGFnZXMvYXBpL2AuXG4gICAqLyBcIlBBR0VTX0FQSVwiXSA9IFwiUEFHRVNfQVBJXCI7XG4gICAgUm91dGVLaW5kWy8qKlxuICAgKiBgQVBQX1BBR0VgIHJlcHJlc2VudHMgYWxsIHRoZSBSZWFjdCBwYWdlcyB0aGF0IGFyZSB1bmRlciBgYXBwL2Agd2l0aCB0aGVcbiAgICogZmlsZW5hbWUgb2YgYHBhZ2Uue2osdH1zeyx4fWAuXG4gICAqLyBcIkFQUF9QQUdFXCJdID0gXCJBUFBfUEFHRVwiO1xuICAgIFJvdXRlS2luZFsvKipcbiAgICogYEFQUF9ST1VURWAgcmVwcmVzZW50cyBhbGwgdGhlIEFQSSByb3V0ZXMgYW5kIG1ldGFkYXRhIHJvdXRlcyB0aGF0IGFyZSB1bmRlciBgYXBwL2Agd2l0aCB0aGVcbiAgICogZmlsZW5hbWUgb2YgYHJvdXRlLntqLHR9c3sseH1gLlxuICAgKi8gXCJBUFBfUk9VVEVcIl0gPSBcIkFQUF9ST1VURVwiO1xufSkoUm91dGVLaW5kIHx8IChSb3V0ZUtpbmQgPSB7fSkpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3V0ZS1raW5kLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/server/future/route-kind.js\n");

/***/ }),

/***/ "(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/pages-api/module.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    PagesAPIRouteModule: function() {\n        return PagesAPIRouteModule;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _routemodule = __webpack_require__(/*! ../route-module */ \"../route-module\");\nconst _node = __webpack_require__(/*! ../../../api-utils/node */ \"../../../api-utils/node\");\nclass PagesAPIRouteModule extends _routemodule.RouteModule {\n    /**\n   *\n   * @param req the incoming server request\n   * @param res the outgoing server response\n   * @param context the context for the render\n   */ async render(req, res, context) {\n        await (0, _node.apiResolver)(req, res, context.query, this.userland, {\n            ...context.previewProps,\n            revalidate: context.revalidate,\n            trustHostHeader: context.trustHostHeader,\n            allowedRevalidateHeaderKeys: context.allowedRevalidateHeaderKeys,\n            hostname: context.hostname\n        }, context.minimalMode, context.dev, context.page);\n    }\n}\nconst _default = PagesAPIRouteModule;\n\n//# sourceMappingURL=module.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsTUFBTSxDQUdMO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHFCQUFxQixtQkFBTyxDQUFDLHdDQUFpQjtBQUM5QyxjQUFjLG1CQUFPLENBQUMsd0RBQXlCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dvcmtzcGFjZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuanM/ZGYxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIFBhZ2VzQVBJUm91dGVNb2R1bGU6IG51bGwsXG4gICAgZGVmYXVsdDogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBQYWdlc0FQSVJvdXRlTW9kdWxlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFBhZ2VzQVBJUm91dGVNb2R1bGU7XG4gICAgfSxcbiAgICBkZWZhdWx0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9kZWZhdWx0O1xuICAgIH1cbn0pO1xuY29uc3QgX3JvdXRlbW9kdWxlID0gcmVxdWlyZShcIi4uL3JvdXRlLW1vZHVsZVwiKTtcbmNvbnN0IF9ub2RlID0gcmVxdWlyZShcIi4uLy4uLy4uL2FwaS11dGlscy9ub2RlXCIpO1xuY2xhc3MgUGFnZXNBUElSb3V0ZU1vZHVsZSBleHRlbmRzIF9yb3V0ZW1vZHVsZS5Sb3V0ZU1vZHVsZSB7XG4gICAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSByZXEgdGhlIGluY29taW5nIHNlcnZlciByZXF1ZXN0XG4gICAqIEBwYXJhbSByZXMgdGhlIG91dGdvaW5nIHNlcnZlciByZXNwb25zZVxuICAgKiBAcGFyYW0gY29udGV4dCB0aGUgY29udGV4dCBmb3IgdGhlIHJlbmRlclxuICAgKi8gYXN5bmMgcmVuZGVyKHJlcSwgcmVzLCBjb250ZXh0KSB7XG4gICAgICAgIGF3YWl0ICgwLCBfbm9kZS5hcGlSZXNvbHZlcikocmVxLCByZXMsIGNvbnRleHQucXVlcnksIHRoaXMudXNlcmxhbmQsIHtcbiAgICAgICAgICAgIC4uLmNvbnRleHQucHJldmlld1Byb3BzLFxuICAgICAgICAgICAgcmV2YWxpZGF0ZTogY29udGV4dC5yZXZhbGlkYXRlLFxuICAgICAgICAgICAgdHJ1c3RIb3N0SGVhZGVyOiBjb250ZXh0LnRydXN0SG9zdEhlYWRlcixcbiAgICAgICAgICAgIGFsbG93ZWRSZXZhbGlkYXRlSGVhZGVyS2V5czogY29udGV4dC5hbGxvd2VkUmV2YWxpZGF0ZUhlYWRlcktleXMsXG4gICAgICAgICAgICBob3N0bmFtZTogY29udGV4dC5ob3N0bmFtZVxuICAgICAgICB9LCBjb250ZXh0Lm1pbmltYWxNb2RlLCBjb250ZXh0LmRldiwgY29udGV4dC5wYWdlKTtcbiAgICB9XG59XG5jb25zdCBfZGVmYXVsdCA9IFBhZ2VzQVBJUm91dGVNb2R1bGU7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vZHVsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fservices&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fservices%2Findex.js&middlewareConfigBase64=e30%3D!"));
module.exports = __webpack_exports__;

})();